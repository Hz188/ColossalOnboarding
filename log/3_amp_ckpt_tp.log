[2024-05-07 07:18:13,235] torch.distributed.run: [WARNING] master_addr is only used for static rdzv_backend and when rdzv_endpoint is not specified.
[2024-05-07 07:18:13,235] torch.distributed.run: [WARNING] 
[2024-05-07 07:18:13,235] torch.distributed.run: [WARNING] *****************************************
[2024-05-07 07:18:13,235] torch.distributed.run: [WARNING] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
[2024-05-07 07:18:13,235] torch.distributed.run: [WARNING] *****************************************
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
[W socket.cpp:663] [c10d] The client socket has failed to connect to [H100-199]:56365 (errno: 22 - Invalid argument).
====================initialize the distributed env====================
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:12<00:12, 12.95s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:12<00:12, 12.93s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:12<00:12, 12.65s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:12<00:12, 12.85s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  7.34s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  8.18s/it]
====================Use tensor parallel====================
====================convert origin mlp to parallel mlp====================
====================get the model with lora====================
trainable params: 4,194,304 || all params: 4,578,349,056 || trainable%: 0.09161171305851609
Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  7.31s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  8.15s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  7.21s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  8.02s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  7.28s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:16<00:00,  8.11s/it]
====================Use auto mixed precision training====================
====================Use gradient checkpoint====================
====================get the dataset====================
You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
====================get the dataloader====================
====================start train====================
You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/home/genghaozhe/.pyenv/versions/3.10.14/envs/colossalai-py310/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/genghaozhe/.pyenv/versions/3.10.14/envs/colossalai-py310/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/home/genghaozhe/.pyenv/versions/3.10.14/envs/colossalai-py310/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/home/genghaozhe/.pyenv/versions/3.10.14/envs/colossalai-py310/lib/python3.10/site-packages/torch/utils/checkpoint.py:429: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
Step: 1	 Data: torch.Size([10, 384])	 Training Loss: 1.0653685331344604
Step: 2	 Data: torch.Size([10, 384])	 Training Loss: 1.0276401042938232
Step: 3	 Data: torch.Size([10, 384])	 Training Loss: 0.96458500623703
Step: 4	 Data: torch.Size([10, 384])	 Training Loss: 1.1947987079620361
Step: 5	 Data: torch.Size([10, 384])	 Training Loss: 1.268062710762024
Step: 6	 Data: torch.Size([10, 302])	 Training Loss: 1.2403061389923096
Step: 7	 Data: torch.Size([10, 384])	 Training Loss: 1.2179263830184937
Step: 8	 Data: torch.Size([10, 384])	 Training Loss: 1.1049973964691162
Step: 9	 Data: torch.Size([10, 384])	 Training Loss: 1.1115477085113525
Step: 10	 Data: torch.Size([10, 384])	 Training Loss: 1.03225576877594
Step: 11	 Data: torch.Size([10, 384])	 Training Loss: 1.3792517185211182
Step: 12	 Data: torch.Size([10, 319])	 Training Loss: 1.1878160238265991
Step: 13	 Data: torch.Size([10, 384])	 Training Loss: 1.1882655620574951
Step: 14	 Data: torch.Size([10, 384])	 Training Loss: 0.9835073947906494
Step: 15	 Data: torch.Size([10, 384])	 Training Loss: 0.9870250225067139
Step: 16	 Data: torch.Size([10, 384])	 Training Loss: 1.2151412963867188
Step: 17	 Data: torch.Size([10, 384])	 Training Loss: 1.1380385160446167
Step: 18	 Data: torch.Size([10, 384])	 Training Loss: 1.1935614347457886
Step: 19	 Data: torch.Size([10, 384])	 Training Loss: 1.1198755502700806
Step: 20	 Data: torch.Size([10, 384])	 Training Loss: 1.120613932609558
Step: 21	 Data: torch.Size([10, 384])	 Training Loss: 1.237112283706665
Step: 22	 Data: torch.Size([10, 384])	 Training Loss: 1.0423297882080078
Step: 23	 Data: torch.Size([10, 384])	 Training Loss: 1.1446813344955444
Step: 24	 Data: torch.Size([10, 384])	 Training Loss: 1.0690580606460571
Step: 25	 Data: torch.Size([10, 384])	 Training Loss: 1.148409128189087
Step: 26	 Data: torch.Size([10, 384])	 Training Loss: 1.074641466140747
Step: 27	 Data: torch.Size([10, 384])	 Training Loss: 1.3526556491851807
Step: 28	 Data: torch.Size([10, 384])	 Training Loss: 1.1387463808059692
Step: 29	 Data: torch.Size([10, 384])	 Training Loss: 1.1077431440353394
Step: 30	 Data: torch.Size([10, 384])	 Training Loss: 1.1476589441299438
Step: 31	 Data: torch.Size([10, 384])	 Training Loss: 0.9729231595993042
Step: 32	 Data: torch.Size([10, 384])	 Training Loss: 1.0465583801269531
Step: 33	 Data: torch.Size([10, 384])	 Training Loss: 1.0152751207351685
Step: 34	 Data: torch.Size([10, 384])	 Training Loss: 1.1250131130218506
Step: 35	 Data: torch.Size([10, 384])	 Training Loss: 1.1628482341766357
Step: 36	 Data: torch.Size([10, 384])	 Training Loss: 0.956947922706604
Step: 37	 Data: torch.Size([10, 384])	 Training Loss: 1.1549978256225586
Step: 38	 Data: torch.Size([10, 384])	 Training Loss: 1.446610927581787
Step: 39	 Data: torch.Size([10, 384])	 Training Loss: 1.279296875
Step: 40	 Data: torch.Size([10, 384])	 Training Loss: 1.1210898160934448
Step: 41	 Data: torch.Size([10, 384])	 Training Loss: 1.1370573043823242
Step: 42	 Data: torch.Size([10, 384])	 Training Loss: 1.02975332736969
Step: 43	 Data: torch.Size([10, 384])	 Training Loss: 1.1307886838912964
Step: 44	 Data: torch.Size([10, 384])	 Training Loss: 0.9779693484306335
Step: 45	 Data: torch.Size([10, 384])	 Training Loss: 0.9342278242111206
Step: 46	 Data: torch.Size([10, 384])	 Training Loss: 1.1529545783996582
Step: 47	 Data: torch.Size([10, 384])	 Training Loss: 1.2599236965179443
Step: 48	 Data: torch.Size([10, 384])	 Training Loss: 0.9947760105133057
Step: 49	 Data: torch.Size([10, 384])	 Training Loss: 1.019208312034607
Step: 50	 Data: torch.Size([10, 384])	 Training Loss: 1.038784146308899
Step: 51	 Data: torch.Size([10, 384])	 Training Loss: 0.9503563642501831
Step: 52	 Data: torch.Size([10, 384])	 Training Loss: 0.9474596381187439
Step: 53	 Data: torch.Size([10, 384])	 Training Loss: 1.0046597719192505
Step: 54	 Data: torch.Size([10, 384])	 Training Loss: 1.0719324350357056
Step: 55	 Data: torch.Size([10, 384])	 Training Loss: 1.3009260892868042
Step: 56	 Data: torch.Size([10, 384])	 Training Loss: 1.2100493907928467
Step: 57	 Data: torch.Size([10, 384])	 Training Loss: 1.0307966470718384
Step: 58	 Data: torch.Size([10, 384])	 Training Loss: 1.2131556272506714
Step: 59	 Data: torch.Size([10, 384])	 Training Loss: 1.0498437881469727
Step: 60	 Data: torch.Size([10, 384])	 Training Loss: 1.085823893547058
Step: 61	 Data: torch.Size([10, 384])	 Training Loss: 0.9778282046318054
Step: 62	 Data: torch.Size([10, 384])	 Training Loss: 0.9729474782943726
Step: 63	 Data: torch.Size([10, 384])	 Training Loss: 0.9640383124351501
Step: 64	 Data: torch.Size([10, 384])	 Training Loss: 1.043910264968872
Step: 65	 Data: torch.Size([10, 384])	 Training Loss: 1.0226889848709106
Step: 66	 Data: torch.Size([10, 384])	 Training Loss: 1.1324005126953125
Step: 67	 Data: torch.Size([10, 384])	 Training Loss: 0.9601092338562012
Step: 68	 Data: torch.Size([10, 384])	 Training Loss: 1.0216646194458008
Step: 69	 Data: torch.Size([10, 384])	 Training Loss: 1.1071197986602783
Step: 70	 Data: torch.Size([10, 384])	 Training Loss: 1.0375165939331055
Step: 71	 Data: torch.Size([10, 384])	 Training Loss: 1.009848713874817
Step: 72	 Data: torch.Size([10, 384])	 Training Loss: 0.929144024848938
Step: 73	 Data: torch.Size([10, 384])	 Training Loss: 0.9225805997848511
Step: 74	 Data: torch.Size([10, 384])	 Training Loss: 0.9419116377830505
Step: 75	 Data: torch.Size([10, 384])	 Training Loss: 1.1086935997009277
Step: 76	 Data: torch.Size([10, 384])	 Training Loss: 0.9091790914535522
Step: 77	 Data: torch.Size([10, 384])	 Training Loss: 1.049790859222412
Step: 78	 Data: torch.Size([10, 384])	 Training Loss: 1.0512404441833496
Step: 79	 Data: torch.Size([10, 384])	 Training Loss: 1.204521894454956
Step: 80	 Data: torch.Size([10, 384])	 Training Loss: 1.0066779851913452
Step: 81	 Data: torch.Size([10, 384])	 Training Loss: 1.0338830947875977
Step: 82	 Data: torch.Size([10, 384])	 Training Loss: 1.045124888420105
Step: 83	 Data: torch.Size([10, 384])	 Training Loss: 1.1265406608581543
Step: 84	 Data: torch.Size([10, 384])	 Training Loss: 1.0865103006362915
Step: 85	 Data: torch.Size([10, 384])	 Training Loss: 1.0519877672195435
Step: 86	 Data: torch.Size([10, 384])	 Training Loss: 1.184205174446106
Step: 87	 Data: torch.Size([10, 384])	 Training Loss: 1.029532551765442
Step: 88	 Data: torch.Size([10, 384])	 Training Loss: 1.1294008493423462
Step: 89	 Data: torch.Size([10, 384])	 Training Loss: 0.9620111584663391
Step: 90	 Data: torch.Size([10, 384])	 Training Loss: 1.1352334022521973
Step: 91	 Data: torch.Size([10, 384])	 Training Loss: 0.8928146362304688
Step: 92	 Data: torch.Size([10, 384])	 Training Loss: 0.9157158732414246
Step: 93	 Data: torch.Size([10, 384])	 Training Loss: 0.9143621325492859
Step: 94	 Data: torch.Size([10, 384])	 Training Loss: 0.8525204062461853
Step: 95	 Data: torch.Size([10, 384])	 Training Loss: 0.9127660393714905
Step: 96	 Data: torch.Size([10, 384])	 Training Loss: 0.9823048710823059
Step: 97	 Data: torch.Size([10, 384])	 Training Loss: 0.997995138168335
Step: 98	 Data: torch.Size([10, 384])	 Training Loss: 1.1265753507614136
Step: 99	 Data: torch.Size([10, 384])	 Training Loss: 0.9405771493911743
Step: 100	 Data: torch.Size([10, 384])	 Training Loss: 0.9705759882926941
Step: 101	 Data: torch.Size([10, 384])	 Training Loss: 1.0574421882629395
Step: 102	 Data: torch.Size([10, 384])	 Training Loss: 1.037909746170044
Step: 103	 Data: torch.Size([10, 384])	 Training Loss: 0.9913880228996277
Step: 104	 Data: torch.Size([10, 384])	 Training Loss: 1.1126633882522583
Step: 105	 Data: torch.Size([10, 384])	 Training Loss: 1.030117392539978
Step: 106	 Data: torch.Size([10, 384])	 Training Loss: 0.964353084564209
Step: 107	 Data: torch.Size([10, 384])	 Training Loss: 1.0201278924942017
Step: 108	 Data: torch.Size([10, 384])	 Training Loss: 0.8739982843399048
Step: 109	 Data: torch.Size([10, 384])	 Training Loss: 1.0649540424346924
Step: 110	 Data: torch.Size([10, 384])	 Training Loss: 1.0458120107650757
Step: 111	 Data: torch.Size([10, 384])	 Training Loss: 0.8486425876617432
Step: 112	 Data: torch.Size([10, 384])	 Training Loss: 1.025195837020874
Step: 113	 Data: torch.Size([10, 384])	 Training Loss: 0.9626619815826416
Step: 114	 Data: torch.Size([10, 349])	 Training Loss: 0.973035991191864
Step: 115	 Data: torch.Size([10, 384])	 Training Loss: 0.8146263957023621
Step: 116	 Data: torch.Size([10, 384])	 Training Loss: 0.9797825813293457
Step: 117	 Data: torch.Size([10, 384])	 Training Loss: 1.2580376863479614
Step: 118	 Data: torch.Size([10, 384])	 Training Loss: 0.8846588730812073
Step: 119	 Data: torch.Size([10, 384])	 Training Loss: 0.9050779342651367
Step: 120	 Data: torch.Size([10, 384])	 Training Loss: 0.926783561706543
Step: 121	 Data: torch.Size([10, 384])	 Training Loss: 0.8959289789199829
Step: 122	 Data: torch.Size([10, 384])	 Training Loss: 0.9907605648040771
Step: 123	 Data: torch.Size([10, 384])	 Training Loss: 0.9732035994529724
Step: 124	 Data: torch.Size([10, 384])	 Training Loss: 1.0345478057861328
Step: 125	 Data: torch.Size([10, 384])	 Training Loss: 0.999477207660675
Step: 126	 Data: torch.Size([10, 384])	 Training Loss: 1.0889997482299805
Step: 127	 Data: torch.Size([10, 384])	 Training Loss: 0.8907177448272705
Step: 128	 Data: torch.Size([10, 384])	 Training Loss: 0.8750189542770386
Step: 129	 Data: torch.Size([10, 384])	 Training Loss: 0.9591949582099915
Step: 130	 Data: torch.Size([10, 384])	 Training Loss: 0.8612244725227356
Step: 131	 Data: torch.Size([10, 384])	 Training Loss: 1.0212218761444092
Step: 132	 Data: torch.Size([10, 384])	 Training Loss: 0.9871232509613037
Step: 133	 Data: torch.Size([10, 384])	 Training Loss: 0.95049649477005
Step: 134	 Data: torch.Size([10, 384])	 Training Loss: 0.8382960557937622
Step: 135	 Data: torch.Size([10, 384])	 Training Loss: 1.0133148431777954
Step: 136	 Data: torch.Size([10, 384])	 Training Loss: 0.9049814343452454
Step: 137	 Data: torch.Size([10, 384])	 Training Loss: 1.0146880149841309
Step: 138	 Data: torch.Size([10, 384])	 Training Loss: 0.9237324595451355
Step: 139	 Data: torch.Size([10, 384])	 Training Loss: 0.9866400957107544
Step: 140	 Data: torch.Size([10, 384])	 Training Loss: 0.9634884595870972
Step: 141	 Data: torch.Size([10, 384])	 Training Loss: 1.0437067747116089
Step: 142	 Data: torch.Size([10, 384])	 Training Loss: 1.003433108329773
Step: 143	 Data: torch.Size([10, 384])	 Training Loss: 1.0287636518478394
Step: 144	 Data: torch.Size([10, 384])	 Training Loss: 1.0347925424575806
Step: 145	 Data: torch.Size([10, 384])	 Training Loss: 0.8754628300666809
Step: 146	 Data: torch.Size([10, 384])	 Training Loss: 0.8324587941169739
Step: 147	 Data: torch.Size([10, 384])	 Training Loss: 0.9342560768127441
Step: 148	 Data: torch.Size([10, 384])	 Training Loss: 0.8843330144882202
Step: 149	 Data: torch.Size([10, 384])	 Training Loss: 1.0872644186019897
Step: 150	 Data: torch.Size([10, 384])	 Training Loss: 0.8770328164100647
Step: 151	 Data: torch.Size([10, 384])	 Training Loss: 0.8208320140838623
Step: 152	 Data: torch.Size([10, 384])	 Training Loss: 0.946124792098999
Step: 153	 Data: torch.Size([10, 384])	 Training Loss: 1.1429004669189453
Step: 154	 Data: torch.Size([10, 384])	 Training Loss: 0.8781924247741699
Step: 155	 Data: torch.Size([10, 384])	 Training Loss: 0.9859771728515625
Step: 156	 Data: torch.Size([10, 384])	 Training Loss: 0.9987139701843262
Step: 157	 Data: torch.Size([10, 384])	 Training Loss: 0.9308288097381592
Step: 158	 Data: torch.Size([10, 384])	 Training Loss: 0.8505932092666626
Step: 159	 Data: torch.Size([10, 384])	 Training Loss: 1.0728759765625
Step: 160	 Data: torch.Size([10, 384])	 Training Loss: 1.0133249759674072
Step: 161	 Data: torch.Size([10, 384])	 Training Loss: 0.8916624188423157
Step: 162	 Data: torch.Size([10, 384])	 Training Loss: 0.9084575772285461
Step: 163	 Data: torch.Size([10, 384])	 Training Loss: 0.9509497284889221
Step: 164	 Data: torch.Size([10, 384])	 Training Loss: 0.8578075170516968
Step: 165	 Data: torch.Size([10, 384])	 Training Loss: 0.930270254611969
Step: 166	 Data: torch.Size([10, 384])	 Training Loss: 1.0339457988739014
Step: 167	 Data: torch.Size([10, 384])	 Training Loss: 0.7821249961853027
Step: 168	 Data: torch.Size([10, 384])	 Training Loss: 0.9895777702331543
Step: 169	 Data: torch.Size([10, 384])	 Training Loss: 0.9236158132553101
Step: 170	 Data: torch.Size([10, 384])	 Training Loss: 0.9160657525062561
Step: 171	 Data: torch.Size([10, 384])	 Training Loss: 0.9418278932571411
Step: 172	 Data: torch.Size([10, 384])	 Training Loss: 0.8867526650428772
Step: 173	 Data: torch.Size([10, 384])	 Training Loss: 1.1029255390167236
Step: 174	 Data: torch.Size([10, 384])	 Training Loss: 0.931915819644928
Step: 175	 Data: torch.Size([10, 384])	 Training Loss: 1.0786875486373901
Step: 176	 Data: torch.Size([10, 384])	 Training Loss: 0.8225362300872803
Step: 177	 Data: torch.Size([10, 346])	 Training Loss: 0.9447334408760071
Step: 178	 Data: torch.Size([10, 384])	 Training Loss: 0.8145195841789246
Step: 179	 Data: torch.Size([10, 384])	 Training Loss: 0.8712945580482483
Step: 180	 Data: torch.Size([10, 384])	 Training Loss: 0.9257634878158569
Step: 181	 Data: torch.Size([10, 384])	 Training Loss: 0.9299072027206421
Step: 182	 Data: torch.Size([10, 384])	 Training Loss: 0.9613257646560669
Step: 183	 Data: torch.Size([10, 384])	 Training Loss: 0.8929853439331055
Step: 184	 Data: torch.Size([10, 384])	 Training Loss: 1.1164077520370483
Step: 185	 Data: torch.Size([10, 384])	 Training Loss: 1.0620691776275635
Step: 186	 Data: torch.Size([10, 384])	 Training Loss: 0.9461699724197388
Step: 187	 Data: torch.Size([10, 384])	 Training Loss: 1.0573524236679077
Step: 188	 Data: torch.Size([10, 384])	 Training Loss: 0.9432725310325623
Step: 189	 Data: torch.Size([10, 384])	 Training Loss: 0.9992451071739197
Step: 190	 Data: torch.Size([10, 384])	 Training Loss: 0.9913168549537659
Step: 191	 Data: torch.Size([10, 384])	 Training Loss: 1.021056890487671
Step: 192	 Data: torch.Size([10, 384])	 Training Loss: 0.8395678400993347
Step: 193	 Data: torch.Size([10, 384])	 Training Loss: 0.8910046219825745
Step: 194	 Data: torch.Size([10, 384])	 Training Loss: 1.0401809215545654
Step: 195	 Data: torch.Size([10, 384])	 Training Loss: 0.9502087831497192
Step: 196	 Data: torch.Size([10, 384])	 Training Loss: 0.9831082820892334
Step: 197	 Data: torch.Size([10, 384])	 Training Loss: 0.9842587113380432
Step: 198	 Data: torch.Size([10, 384])	 Training Loss: 0.8560304045677185
Step: 199	 Data: torch.Size([10, 384])	 Training Loss: 0.8783969283103943
Step: 200	 Data: torch.Size([10, 384])	 Training Loss: 0.8316747546195984
Step: 201	 Data: torch.Size([10, 384])	 Training Loss: 0.9765124917030334
Step: 202	 Data: torch.Size([10, 277])	 Training Loss: 1.1301548480987549
Step: 203	 Data: torch.Size([10, 384])	 Training Loss: 0.9604741930961609
Step: 204	 Data: torch.Size([10, 384])	 Training Loss: 0.9415857791900635
Step: 205	 Data: torch.Size([10, 384])	 Training Loss: 1.0849839448928833
Step: 206	 Data: torch.Size([10, 356])	 Training Loss: 0.9473258256912231
Step: 207	 Data: torch.Size([10, 384])	 Training Loss: 0.9373372793197632
Step: 208	 Data: torch.Size([10, 384])	 Training Loss: 0.7940016388893127
Step: 209	 Data: torch.Size([10, 384])	 Training Loss: 0.8758062124252319
Step: 210	 Data: torch.Size([10, 384])	 Training Loss: 1.0313714742660522
Step: 211	 Data: torch.Size([10, 355])	 Training Loss: 0.9207537174224854
Step: 212	 Data: torch.Size([10, 384])	 Training Loss: 0.8918339610099792
Step: 213	 Data: torch.Size([10, 384])	 Training Loss: 1.1102837324142456
Step: 214	 Data: torch.Size([10, 384])	 Training Loss: 0.9228429198265076
Step: 215	 Data: torch.Size([10, 384])	 Training Loss: 0.8637536764144897
Step: 216	 Data: torch.Size([10, 384])	 Training Loss: 0.8267552256584167
Step: 217	 Data: torch.Size([10, 384])	 Training Loss: 0.8918346762657166
Step: 218	 Data: torch.Size([10, 384])	 Training Loss: 0.9165284633636475
Step: 219	 Data: torch.Size([10, 384])	 Training Loss: 0.9205571413040161
Step: 220	 Data: torch.Size([10, 384])	 Training Loss: 0.8584951162338257
Step: 221	 Data: torch.Size([10, 384])	 Training Loss: 0.9750661253929138
Step: 222	 Data: torch.Size([10, 384])	 Training Loss: 0.9187799692153931
Step: 223	 Data: torch.Size([10, 384])	 Training Loss: 0.9639226794242859
Step: 224	 Data: torch.Size([10, 384])	 Training Loss: 0.893490195274353
Step: 225	 Data: torch.Size([10, 384])	 Training Loss: 0.909610390663147
Step: 226	 Data: torch.Size([10, 384])	 Training Loss: 1.0787004232406616
Step: 227	 Data: torch.Size([10, 384])	 Training Loss: 0.9771968722343445
Step: 228	 Data: torch.Size([10, 384])	 Training Loss: 0.7759534120559692
Step: 229	 Data: torch.Size([10, 384])	 Training Loss: 0.9364622235298157
Step: 230	 Data: torch.Size([10, 384])	 Training Loss: 0.9517466425895691
Step: 231	 Data: torch.Size([10, 384])	 Training Loss: 0.7670983672142029
Step: 232	 Data: torch.Size([10, 384])	 Training Loss: 0.9117752909660339
Step: 233	 Data: torch.Size([10, 384])	 Training Loss: 0.8843929171562195
Step: 234	 Data: torch.Size([10, 384])	 Training Loss: 1.1631395816802979
Step: 235	 Data: torch.Size([10, 384])	 Training Loss: 0.9685343503952026
Step: 236	 Data: torch.Size([10, 384])	 Training Loss: 1.0218993425369263
Step: 237	 Data: torch.Size([10, 384])	 Training Loss: 0.9546244144439697
Step: 238	 Data: torch.Size([10, 384])	 Training Loss: 1.0064541101455688
Step: 239	 Data: torch.Size([10, 384])	 Training Loss: 1.0276293754577637
Step: 240	 Data: torch.Size([10, 384])	 Training Loss: 0.9815805554389954
Step: 241	 Data: torch.Size([10, 384])	 Training Loss: 1.06675386428833
Step: 242	 Data: torch.Size([10, 384])	 Training Loss: 0.9777604341506958
Step: 243	 Data: torch.Size([10, 384])	 Training Loss: 0.9838719367980957
Step: 244	 Data: torch.Size([10, 384])	 Training Loss: 0.8936023712158203
Step: 245	 Data: torch.Size([10, 384])	 Training Loss: 0.9633774757385254
Step: 246	 Data: torch.Size([10, 384])	 Training Loss: 1.1036429405212402
Step: 247	 Data: torch.Size([10, 384])	 Training Loss: 0.9596464037895203
Step: 248	 Data: torch.Size([10, 384])	 Training Loss: 1.0206189155578613
Step: 249	 Data: torch.Size([10, 384])	 Training Loss: 1.082651972770691
Step: 250	 Data: torch.Size([10, 340])	 Training Loss: 1.1443934440612793
Step: 251	 Data: torch.Size([10, 384])	 Training Loss: 0.9841625094413757
Step: 252	 Data: torch.Size([10, 384])	 Training Loss: 0.8522233963012695
Step: 253	 Data: torch.Size([10, 384])	 Training Loss: 1.0047824382781982
Step: 254	 Data: torch.Size([10, 384])	 Training Loss: 0.8641102910041809
Step: 255	 Data: torch.Size([10, 384])	 Training Loss: 0.9502158761024475
Step: 256	 Data: torch.Size([10, 384])	 Training Loss: 0.9411496520042419
Step: 257	 Data: torch.Size([10, 384])	 Training Loss: 0.9325678944587708
Step: 258	 Data: torch.Size([10, 384])	 Training Loss: 0.8916066884994507
Step: 259	 Data: torch.Size([10, 384])	 Training Loss: 0.9074546694755554
Step: 260	 Data: torch.Size([10, 384])	 Training Loss: 0.8927367329597473
Step: 261	 Data: torch.Size([10, 384])	 Training Loss: 0.8323417901992798
Step: 262	 Data: torch.Size([10, 384])	 Training Loss: 0.9245024919509888
Step: 263	 Data: torch.Size([10, 384])	 Training Loss: 0.9252720475196838
Step: 264	 Data: torch.Size([10, 384])	 Training Loss: 0.8282625079154968
Step: 265	 Data: torch.Size([10, 384])	 Training Loss: 0.8505687117576599
Step: 266	 Data: torch.Size([10, 384])	 Training Loss: 0.9971874356269836
Step: 267	 Data: torch.Size([10, 384])	 Training Loss: 0.8740518093109131
Step: 268	 Data: torch.Size([10, 384])	 Training Loss: 0.9101274609565735
Step: 269	 Data: torch.Size([10, 384])	 Training Loss: 0.9834826588630676
Step: 270	 Data: torch.Size([10, 384])	 Training Loss: 0.938602864742279
Step: 271	 Data: torch.Size([10, 384])	 Training Loss: 0.9077410101890564
Step: 272	 Data: torch.Size([10, 384])	 Training Loss: 1.0127629041671753
Step: 273	 Data: torch.Size([10, 384])	 Training Loss: 0.9221045970916748
Step: 274	 Data: torch.Size([10, 384])	 Training Loss: 1.0155842304229736
Step: 275	 Data: torch.Size([10, 384])	 Training Loss: 0.930387020111084
Step: 276	 Data: torch.Size([10, 384])	 Training Loss: 0.9745903015136719
Step: 277	 Data: torch.Size([10, 384])	 Training Loss: 0.9115495085716248
Step: 278	 Data: torch.Size([10, 384])	 Training Loss: 0.9462584853172302
Step: 279	 Data: torch.Size([10, 384])	 Training Loss: 0.9150887131690979
Step: 280	 Data: torch.Size([10, 384])	 Training Loss: 0.7974685430526733
Step: 281	 Data: torch.Size([10, 384])	 Training Loss: 1.0883718729019165
Step: 282	 Data: torch.Size([10, 384])	 Training Loss: 0.9285276532173157
Step: 283	 Data: torch.Size([10, 384])	 Training Loss: 0.8523169755935669
Step: 284	 Data: torch.Size([10, 384])	 Training Loss: 1.0466482639312744
Step: 285	 Data: torch.Size([10, 384])	 Training Loss: 0.8473016619682312
Step: 286	 Data: torch.Size([10, 384])	 Training Loss: 0.9905086159706116
Step: 287	 Data: torch.Size([10, 384])	 Training Loss: 0.972667932510376
Step: 288	 Data: torch.Size([10, 384])	 Training Loss: 1.0075762271881104
Step: 289	 Data: torch.Size([10, 384])	 Training Loss: 0.9397822022438049
Step: 290	 Data: torch.Size([10, 384])	 Training Loss: 0.9112443923950195
Step: 291	 Data: torch.Size([10, 384])	 Training Loss: 0.9309899806976318
Step: 292	 Data: torch.Size([10, 384])	 Training Loss: 0.8043699264526367
Step: 293	 Data: torch.Size([10, 372])	 Training Loss: 0.8408225774765015
Step: 294	 Data: torch.Size([10, 384])	 Training Loss: 1.040178894996643
Step: 295	 Data: torch.Size([10, 384])	 Training Loss: 0.8581422567367554
Step: 296	 Data: torch.Size([10, 384])	 Training Loss: 0.9254966378211975
Step: 297	 Data: torch.Size([10, 213])	 Training Loss: 1.0752707719802856
Step: 298	 Data: torch.Size([10, 384])	 Training Loss: 1.011671543121338
Step: 299	 Data: torch.Size([10, 384])	 Training Loss: 0.8694449663162231
Step: 300	 Data: torch.Size([10, 384])	 Training Loss: 1.0374022722244263
Step: 301	 Data: torch.Size([10, 384])	 Training Loss: 1.0794569253921509
Step: 302	 Data: torch.Size([10, 384])	 Training Loss: 0.8975660800933838
Step: 303	 Data: torch.Size([10, 384])	 Training Loss: 0.9367120862007141
Step: 304	 Data: torch.Size([10, 384])	 Training Loss: 0.8860577344894409
Step: 305	 Data: torch.Size([10, 384])	 Training Loss: 0.8796628713607788
Step: 306	 Data: torch.Size([10, 384])	 Training Loss: 1.0780762434005737
Step: 307	 Data: torch.Size([10, 384])	 Training Loss: 0.9578759074211121
Step: 308	 Data: torch.Size([10, 384])	 Training Loss: 1.108680009841919
Step: 309	 Data: torch.Size([10, 384])	 Training Loss: 0.978204071521759
Step: 310	 Data: torch.Size([10, 384])	 Training Loss: 0.9970601797103882
Step: 311	 Data: torch.Size([10, 384])	 Training Loss: 0.9822274446487427
Step: 312	 Data: torch.Size([10, 384])	 Training Loss: 0.8588744401931763
Step: 313	 Data: torch.Size([10, 384])	 Training Loss: 0.9263404011726379
Step: 314	 Data: torch.Size([10, 384])	 Training Loss: 0.9618247151374817
Step: 315	 Data: torch.Size([10, 384])	 Training Loss: 1.0009299516677856
Step: 316	 Data: torch.Size([10, 384])	 Training Loss: 0.8277825117111206
Step: 317	 Data: torch.Size([10, 384])	 Training Loss: 0.8992302417755127
Step: 318	 Data: torch.Size([10, 384])	 Training Loss: 1.1419432163238525
Step: 319	 Data: torch.Size([10, 384])	 Training Loss: 0.965100884437561
Step: 320	 Data: torch.Size([10, 384])	 Training Loss: 1.2329875230789185
Step: 321	 Data: torch.Size([10, 384])	 Training Loss: 0.9911171793937683
Step: 322	 Data: torch.Size([10, 384])	 Training Loss: 1.1473225355148315
Step: 323	 Data: torch.Size([10, 384])	 Training Loss: 0.9449078440666199
Step: 324	 Data: torch.Size([10, 384])	 Training Loss: 0.9002417922019958
Step: 325	 Data: torch.Size([10, 384])	 Training Loss: 0.8295146226882935
Step: 326	 Data: torch.Size([10, 384])	 Training Loss: 0.815337598323822
Step: 327	 Data: torch.Size([10, 384])	 Training Loss: 0.8000251054763794
Step: 328	 Data: torch.Size([10, 384])	 Training Loss: 1.1279139518737793
Step: 329	 Data: torch.Size([10, 384])	 Training Loss: 1.11551034450531
Step: 330	 Data: torch.Size([10, 384])	 Training Loss: 0.9499946236610413
Step: 331	 Data: torch.Size([10, 384])	 Training Loss: 0.7870454788208008
Step: 332	 Data: torch.Size([10, 384])	 Training Loss: 0.9998330473899841
Step: 333	 Data: torch.Size([10, 384])	 Training Loss: 0.9578132033348083
Step: 334	 Data: torch.Size([10, 384])	 Training Loss: 0.9712831377983093
Step: 335	 Data: torch.Size([10, 384])	 Training Loss: 0.8288868069648743
Step: 336	 Data: torch.Size([10, 384])	 Training Loss: 0.8237095475196838
Step: 337	 Data: torch.Size([10, 384])	 Training Loss: 1.092282772064209
Step: 338	 Data: torch.Size([10, 384])	 Training Loss: 1.0461958646774292
Step: 339	 Data: torch.Size([10, 384])	 Training Loss: 0.9293248653411865
Step: 340	 Data: torch.Size([10, 384])	 Training Loss: 0.814408004283905
Step: 341	 Data: torch.Size([10, 384])	 Training Loss: 0.8234565854072571
Step: 342	 Data: torch.Size([10, 384])	 Training Loss: 0.9734675884246826
Step: 343	 Data: torch.Size([10, 384])	 Training Loss: 1.0522264242172241
Step: 344	 Data: torch.Size([10, 384])	 Training Loss: 1.0843652486801147
Step: 345	 Data: torch.Size([10, 384])	 Training Loss: 0.9885863065719604
Step: 346	 Data: torch.Size([10, 384])	 Training Loss: 0.934904158115387
Step: 347	 Data: torch.Size([10, 384])	 Training Loss: 1.0640087127685547
Step: 348	 Data: torch.Size([10, 384])	 Training Loss: 0.9534953832626343
Step: 349	 Data: torch.Size([10, 384])	 Training Loss: 0.8773748278617859
Step: 350	 Data: torch.Size([10, 384])	 Training Loss: 0.9045185446739197
Step: 351	 Data: torch.Size([10, 384])	 Training Loss: 0.8709083199501038
Step: 352	 Data: torch.Size([10, 384])	 Training Loss: 0.9062125086784363
Step: 353	 Data: torch.Size([10, 384])	 Training Loss: 0.9706450700759888
Step: 354	 Data: torch.Size([10, 384])	 Training Loss: 0.9587306380271912
Step: 355	 Data: torch.Size([10, 384])	 Training Loss: 0.8662738800048828
Step: 356	 Data: torch.Size([10, 384])	 Training Loss: 1.0906176567077637
Step: 357	 Data: torch.Size([10, 384])	 Training Loss: 0.9805178642272949
Step: 358	 Data: torch.Size([10, 384])	 Training Loss: 1.031854510307312
Step: 359	 Data: torch.Size([10, 384])	 Training Loss: 0.9654181599617004
Step: 360	 Data: torch.Size([10, 384])	 Training Loss: 0.9723620414733887
Step: 361	 Data: torch.Size([10, 384])	 Training Loss: 0.8223844170570374
Step: 362	 Data: torch.Size([10, 384])	 Training Loss: 0.8178874850273132
Step: 363	 Data: torch.Size([10, 384])	 Training Loss: 0.9327903985977173
Step: 364	 Data: torch.Size([10, 384])	 Training Loss: 0.9868619441986084
Step: 365	 Data: torch.Size([10, 384])	 Training Loss: 0.8196707963943481
Step: 366	 Data: torch.Size([10, 384])	 Training Loss: 0.7796071767807007
Step: 367	 Data: torch.Size([10, 384])	 Training Loss: 0.8967188000679016
Step: 368	 Data: torch.Size([10, 384])	 Training Loss: 1.0220227241516113
Step: 369	 Data: torch.Size([10, 384])	 Training Loss: 0.9893064498901367
Step: 370	 Data: torch.Size([10, 384])	 Training Loss: 0.9123628735542297
Step: 371	 Data: torch.Size([10, 384])	 Training Loss: 0.8424423336982727
Step: 372	 Data: torch.Size([10, 384])	 Training Loss: 1.004715085029602
Step: 373	 Data: torch.Size([10, 384])	 Training Loss: 0.9587938189506531
Step: 374	 Data: torch.Size([10, 384])	 Training Loss: 0.8712660074234009
Step: 375	 Data: torch.Size([10, 384])	 Training Loss: 0.841650128364563
Step: 376	 Data: torch.Size([10, 384])	 Training Loss: 0.8764206767082214
Step: 377	 Data: torch.Size([10, 384])	 Training Loss: 0.9775862693786621
Step: 378	 Data: torch.Size([10, 384])	 Training Loss: 0.9089363813400269
Step: 379	 Data: torch.Size([10, 384])	 Training Loss: 0.8463961482048035
Step: 380	 Data: torch.Size([10, 384])	 Training Loss: 1.0093491077423096
Step: 381	 Data: torch.Size([10, 384])	 Training Loss: 0.870068371295929
Step: 382	 Data: torch.Size([10, 384])	 Training Loss: 0.8921895623207092
Step: 383	 Data: torch.Size([10, 384])	 Training Loss: 0.931771993637085
Step: 384	 Data: torch.Size([10, 384])	 Training Loss: 0.8158226013183594
Step: 385	 Data: torch.Size([10, 384])	 Training Loss: 0.8379268646240234
Step: 386	 Data: torch.Size([10, 384])	 Training Loss: 0.9879303574562073
Step: 387	 Data: torch.Size([10, 384])	 Training Loss: 0.8552342057228088
Step: 388	 Data: torch.Size([10, 384])	 Training Loss: 0.9386522173881531
Step: 389	 Data: torch.Size([10, 384])	 Training Loss: 1.1446961164474487
Step: 390	 Data: torch.Size([10, 384])	 Training Loss: 0.8898149728775024
Step: 391	 Data: torch.Size([10, 384])	 Training Loss: 1.098508358001709
Step: 392	 Data: torch.Size([10, 384])	 Training Loss: 0.9528099298477173
Step: 393	 Data: torch.Size([10, 384])	 Training Loss: 0.9154207110404968
Step: 394	 Data: torch.Size([10, 270])	 Training Loss: 0.8528891205787659
Step: 395	 Data: torch.Size([10, 384])	 Training Loss: 0.9412550330162048
Step: 396	 Data: torch.Size([10, 384])	 Training Loss: 0.8891913890838623
Step: 397	 Data: torch.Size([10, 384])	 Training Loss: 0.8954126834869385
Step: 398	 Data: torch.Size([10, 384])	 Training Loss: 0.946132481098175
Step: 399	 Data: torch.Size([10, 384])	 Training Loss: 0.9966548681259155
Step: 400	 Data: torch.Size([10, 384])	 Training Loss: 0.9781348705291748
Step: 401	 Data: torch.Size([10, 384])	 Training Loss: 0.9835209250450134
Step: 402	 Data: torch.Size([10, 384])	 Training Loss: 0.8342671990394592
Step: 403	 Data: torch.Size([10, 384])	 Training Loss: 0.9887737035751343
Step: 404	 Data: torch.Size([10, 384])	 Training Loss: 0.9665628671646118
Step: 405	 Data: torch.Size([10, 384])	 Training Loss: 1.1082288026809692
Step: 406	 Data: torch.Size([10, 384])	 Training Loss: 1.0073038339614868
Step: 407	 Data: torch.Size([10, 384])	 Training Loss: 0.8660057783126831
Step: 408	 Data: torch.Size([10, 384])	 Training Loss: 0.9130675792694092
Step: 409	 Data: torch.Size([10, 384])	 Training Loss: 0.8206395506858826
Step: 410	 Data: torch.Size([10, 384])	 Training Loss: 0.886298418045044
Step: 411	 Data: torch.Size([10, 384])	 Training Loss: 0.9039133787155151
Step: 412	 Data: torch.Size([10, 384])	 Training Loss: 1.0066019296646118
Step: 413	 Data: torch.Size([10, 384])	 Training Loss: 0.938136100769043
Step: 414	 Data: torch.Size([10, 384])	 Training Loss: 0.9633920788764954
Step: 415	 Data: torch.Size([10, 384])	 Training Loss: 0.8960196375846863
Step: 416	 Data: torch.Size([10, 384])	 Training Loss: 1.0376110076904297
Step: 417	 Data: torch.Size([10, 384])	 Training Loss: 0.9226813316345215
Step: 418	 Data: torch.Size([10, 384])	 Training Loss: 1.0190699100494385
Step: 419	 Data: torch.Size([10, 384])	 Training Loss: 0.9346299171447754
Step: 420	 Data: torch.Size([10, 384])	 Training Loss: 0.7984564304351807
Step: 421	 Data: torch.Size([10, 384])	 Training Loss: 0.821739673614502
Step: 422	 Data: torch.Size([10, 384])	 Training Loss: 0.9090437293052673
Step: 423	 Data: torch.Size([10, 384])	 Training Loss: 0.8268495798110962
Step: 424	 Data: torch.Size([10, 384])	 Training Loss: 0.8354083895683289
Step: 425	 Data: torch.Size([10, 384])	 Training Loss: 0.898215115070343
Step: 426	 Data: torch.Size([10, 384])	 Training Loss: 0.8497911691665649
Step: 427	 Data: torch.Size([10, 384])	 Training Loss: 0.9851876497268677
Step: 428	 Data: torch.Size([10, 384])	 Training Loss: 0.8818814158439636
Step: 429	 Data: torch.Size([10, 384])	 Training Loss: 0.8668870329856873
Step: 430	 Data: torch.Size([10, 384])	 Training Loss: 0.9568365812301636
Step: 431	 Data: torch.Size([10, 384])	 Training Loss: 0.8382328152656555
Step: 432	 Data: torch.Size([10, 384])	 Training Loss: 0.9681310057640076
Step: 433	 Data: torch.Size([10, 384])	 Training Loss: 0.8648759126663208
Step: 434	 Data: torch.Size([10, 384])	 Training Loss: 0.980043351650238
Step: 435	 Data: torch.Size([10, 384])	 Training Loss: 0.7611129283905029
Step: 436	 Data: torch.Size([10, 384])	 Training Loss: 0.8367241621017456
Step: 437	 Data: torch.Size([10, 384])	 Training Loss: 0.9913768768310547
Step: 438	 Data: torch.Size([10, 384])	 Training Loss: 0.9903973340988159
Step: 439	 Data: torch.Size([10, 384])	 Training Loss: 1.120323896408081
Step: 440	 Data: torch.Size([10, 384])	 Training Loss: 0.8738688230514526
Step: 441	 Data: torch.Size([10, 384])	 Training Loss: 0.9272421002388
Step: 442	 Data: torch.Size([10, 384])	 Training Loss: 1.003434181213379
Step: 443	 Data: torch.Size([10, 384])	 Training Loss: 0.8582572937011719
Step: 444	 Data: torch.Size([10, 384])	 Training Loss: 0.9253966808319092
Step: 445	 Data: torch.Size([10, 384])	 Training Loss: 1.0105891227722168
Step: 446	 Data: torch.Size([10, 384])	 Training Loss: 0.9761118292808533
Step: 447	 Data: torch.Size([10, 384])	 Training Loss: 0.9784982204437256
Step: 448	 Data: torch.Size([10, 384])	 Training Loss: 0.8002366423606873
Step: 449	 Data: torch.Size([10, 384])	 Training Loss: 1.0817798376083374
Step: 450	 Data: torch.Size([10, 384])	 Training Loss: 0.8806105256080627
Step: 451	 Data: torch.Size([10, 384])	 Training Loss: 0.9342225193977356
Step: 452	 Data: torch.Size([10, 384])	 Training Loss: 0.8652912378311157
Step: 453	 Data: torch.Size([10, 384])	 Training Loss: 0.9276536107063293
Step: 454	 Data: torch.Size([10, 384])	 Training Loss: 1.0974196195602417
Step: 455	 Data: torch.Size([10, 384])	 Training Loss: 0.9775862693786621
Step: 456	 Data: torch.Size([10, 384])	 Training Loss: 0.8811341524124146
Step: 457	 Data: torch.Size([10, 384])	 Training Loss: 0.9551385045051575
Step: 458	 Data: torch.Size([10, 384])	 Training Loss: 0.9236962199211121
Step: 459	 Data: torch.Size([10, 384])	 Training Loss: 1.0370234251022339
Step: 460	 Data: torch.Size([10, 384])	 Training Loss: 0.9225887060165405
Step: 461	 Data: torch.Size([10, 384])	 Training Loss: 0.9684359431266785
Step: 462	 Data: torch.Size([10, 384])	 Training Loss: 1.0786826610565186
Step: 463	 Data: torch.Size([10, 384])	 Training Loss: 0.8871456980705261
Step: 464	 Data: torch.Size([10, 306])	 Training Loss: 1.058407187461853
Step: 465	 Data: torch.Size([10, 249])	 Training Loss: 0.969295084476471
Step: 466	 Data: torch.Size([10, 384])	 Training Loss: 0.9498967528343201
Step: 467	 Data: torch.Size([10, 384])	 Training Loss: 0.967156171798706
Step: 468	 Data: torch.Size([10, 384])	 Training Loss: 1.0565707683563232
Step: 469	 Data: torch.Size([10, 384])	 Training Loss: 0.9949570298194885
Step: 470	 Data: torch.Size([10, 384])	 Training Loss: 1.000701665878296
Step: 471	 Data: torch.Size([10, 384])	 Training Loss: 0.8892437219619751
Step: 472	 Data: torch.Size([10, 384])	 Training Loss: 0.87754887342453
Step: 473	 Data: torch.Size([10, 384])	 Training Loss: 1.0698236227035522
Step: 474	 Data: torch.Size([10, 384])	 Training Loss: 1.0128544569015503
Step: 475	 Data: torch.Size([10, 384])	 Training Loss: 0.9414605498313904
Step: 476	 Data: torch.Size([10, 384])	 Training Loss: 1.1226814985275269
Step: 477	 Data: torch.Size([10, 384])	 Training Loss: 0.8397861123085022
Step: 478	 Data: torch.Size([10, 384])	 Training Loss: 0.9600152969360352
Step: 479	 Data: torch.Size([10, 384])	 Training Loss: 0.9683520197868347
Step: 480	 Data: torch.Size([10, 384])	 Training Loss: 0.9819280505180359
Step: 481	 Data: torch.Size([10, 384])	 Training Loss: 0.7911862134933472
Step: 482	 Data: torch.Size([10, 384])	 Training Loss: 1.0167948007583618
Step: 483	 Data: torch.Size([10, 384])	 Training Loss: 1.0359493494033813
Step: 484	 Data: torch.Size([10, 384])	 Training Loss: 0.8295496106147766
Step: 485	 Data: torch.Size([10, 384])	 Training Loss: 0.8399164080619812
Step: 486	 Data: torch.Size([10, 384])	 Training Loss: 0.9874963760375977
Step: 487	 Data: torch.Size([10, 384])	 Training Loss: 0.8106474280357361
Step: 488	 Data: torch.Size([10, 384])	 Training Loss: 0.9802824854850769
Step: 489	 Data: torch.Size([10, 384])	 Training Loss: 0.8927990794181824
Step: 490	 Data: torch.Size([10, 384])	 Training Loss: 0.8362268805503845
Step: 491	 Data: torch.Size([10, 384])	 Training Loss: 0.7664790749549866
Step: 492	 Data: torch.Size([10, 384])	 Training Loss: 0.8491246104240417
Step: 493	 Data: torch.Size([10, 384])	 Training Loss: 0.8943437933921814
Step: 494	 Data: torch.Size([10, 384])	 Training Loss: 0.814525842666626
Step: 495	 Data: torch.Size([10, 384])	 Training Loss: 1.0580644607543945
Step: 496	 Data: torch.Size([10, 384])	 Training Loss: 0.946402907371521
Step: 497	 Data: torch.Size([10, 384])	 Training Loss: 1.0225601196289062
Step: 498	 Data: torch.Size([10, 384])	 Training Loss: 1.0106016397476196
Step: 499	 Data: torch.Size([10, 384])	 Training Loss: 0.8995087146759033
Step: 500	 Data: torch.Size([10, 384])	 Training Loss: 0.8690657019615173
Step: 501	 Data: torch.Size([10, 384])	 Training Loss: 0.8672268390655518
Step: 502	 Data: torch.Size([10, 384])	 Training Loss: 0.9454602003097534
Step: 503	 Data: torch.Size([10, 384])	 Training Loss: 0.8294687867164612
Step: 504	 Data: torch.Size([10, 384])	 Training Loss: 0.8567882776260376
Step: 505	 Data: torch.Size([10, 384])	 Training Loss: 1.0330207347869873
Step: 506	 Data: torch.Size([10, 384])	 Training Loss: 0.7980753779411316
Step: 507	 Data: torch.Size([10, 384])	 Training Loss: 0.8174130320549011
Step: 508	 Data: torch.Size([10, 384])	 Training Loss: 0.9534813165664673
Step: 509	 Data: torch.Size([10, 384])	 Training Loss: 0.8717027306556702
Step: 510	 Data: torch.Size([10, 384])	 Training Loss: 0.9633796811103821
Step: 511	 Data: torch.Size([10, 384])	 Training Loss: 0.762758195400238
Step: 512	 Data: torch.Size([10, 384])	 Training Loss: 1.173418402671814
Step: 513	 Data: torch.Size([10, 384])	 Training Loss: 1.180538535118103
Step: 514	 Data: torch.Size([10, 384])	 Training Loss: 0.872085452079773
Step: 515	 Data: torch.Size([10, 302])	 Training Loss: 0.842200756072998
Step: 516	 Data: torch.Size([10, 384])	 Training Loss: 1.06456458568573
Step: 517	 Data: torch.Size([10, 384])	 Training Loss: 0.9125192761421204
Step: 518	 Data: torch.Size([10, 384])	 Training Loss: 0.8929520845413208
Step: 519	 Data: torch.Size([10, 384])	 Training Loss: 1.0259791612625122
Step: 520	 Data: torch.Size([10, 384])	 Training Loss: 0.7842133641242981
Step: 521	 Data: torch.Size([10, 384])	 Training Loss: 0.9568625688552856
Step: 522	 Data: torch.Size([10, 384])	 Training Loss: 1.1103004217147827
Step: 523	 Data: torch.Size([10, 384])	 Training Loss: 0.9207890033721924
Step: 524	 Data: torch.Size([10, 384])	 Training Loss: 1.0014278888702393
Step: 525	 Data: torch.Size([10, 384])	 Training Loss: 0.9684739112854004
Step: 526	 Data: torch.Size([10, 384])	 Training Loss: 0.9678610563278198
Step: 527	 Data: torch.Size([10, 384])	 Training Loss: 0.8386344909667969
Step: 528	 Data: torch.Size([10, 384])	 Training Loss: 0.8604356050491333
Step: 529	 Data: torch.Size([10, 384])	 Training Loss: 0.8970162868499756
Step: 530	 Data: torch.Size([10, 384])	 Training Loss: 0.9812063574790955
Step: 531	 Data: torch.Size([10, 384])	 Training Loss: 0.9961808919906616
Step: 532	 Data: torch.Size([10, 384])	 Training Loss: 0.8035571575164795
Step: 533	 Data: torch.Size([10, 384])	 Training Loss: 1.0696102380752563
Step: 534	 Data: torch.Size([10, 384])	 Training Loss: 0.9553200006484985
Step: 535	 Data: torch.Size([10, 384])	 Training Loss: 0.88077312707901
Step: 536	 Data: torch.Size([10, 384])	 Training Loss: 0.8922017812728882
Step: 537	 Data: torch.Size([10, 384])	 Training Loss: 0.9045221209526062
Step: 538	 Data: torch.Size([10, 384])	 Training Loss: 1.026617407798767
Step: 539	 Data: torch.Size([10, 384])	 Training Loss: 0.799697995185852
Step: 540	 Data: torch.Size([10, 384])	 Training Loss: 0.9406704306602478
Step: 541	 Data: torch.Size([10, 384])	 Training Loss: 0.9485613703727722
Step: 542	 Data: torch.Size([10, 384])	 Training Loss: 0.8759444355964661
Step: 543	 Data: torch.Size([10, 384])	 Training Loss: 0.8773077726364136
Step: 544	 Data: torch.Size([10, 384])	 Training Loss: 1.0149341821670532
Step: 545	 Data: torch.Size([10, 384])	 Training Loss: 0.8678743243217468
Step: 546	 Data: torch.Size([10, 384])	 Training Loss: 0.8657055497169495
Step: 547	 Data: torch.Size([10, 384])	 Training Loss: 0.8430193066596985
Step: 548	 Data: torch.Size([10, 384])	 Training Loss: 0.9500795602798462
Step: 549	 Data: torch.Size([10, 384])	 Training Loss: 0.9212907552719116
Step: 550	 Data: torch.Size([10, 384])	 Training Loss: 0.9753568172454834
Step: 551	 Data: torch.Size([10, 384])	 Training Loss: 0.9488716721534729
Step: 552	 Data: torch.Size([10, 384])	 Training Loss: 1.1620581150054932
Step: 553	 Data: torch.Size([10, 384])	 Training Loss: 0.8466984629631042
Step: 554	 Data: torch.Size([10, 384])	 Training Loss: 0.890031099319458
Step: 555	 Data: torch.Size([10, 384])	 Training Loss: 0.9054588079452515
Step: 556	 Data: torch.Size([10, 384])	 Training Loss: 0.9599223732948303
Step: 557	 Data: torch.Size([10, 384])	 Training Loss: 1.048563003540039
Step: 558	 Data: torch.Size([10, 384])	 Training Loss: 0.9204372763633728
Step: 559	 Data: torch.Size([10, 384])	 Training Loss: 1.010823369026184
Step: 560	 Data: torch.Size([10, 384])	 Training Loss: 1.1358911991119385
Step: 561	 Data: torch.Size([10, 384])	 Training Loss: 0.9157326817512512
Step: 562	 Data: torch.Size([10, 384])	 Training Loss: 0.9798084497451782
Step: 563	 Data: torch.Size([10, 384])	 Training Loss: 0.8739639520645142
Step: 564	 Data: torch.Size([10, 384])	 Training Loss: 1.0764204263687134
Step: 565	 Data: torch.Size([10, 384])	 Training Loss: 0.8691792488098145
Step: 566	 Data: torch.Size([10, 384])	 Training Loss: 1.0650982856750488
Step: 567	 Data: torch.Size([10, 374])	 Training Loss: 0.739906907081604
Step: 568	 Data: torch.Size([10, 384])	 Training Loss: 1.0424833297729492
Step: 569	 Data: torch.Size([10, 384])	 Training Loss: 1.001457691192627
Step: 570	 Data: torch.Size([10, 384])	 Training Loss: 0.8208137154579163
Step: 571	 Data: torch.Size([10, 384])	 Training Loss: 0.8853602409362793
Step: 572	 Data: torch.Size([10, 384])	 Training Loss: 0.7774967551231384
Step: 573	 Data: torch.Size([10, 384])	 Training Loss: 0.8378561735153198
Step: 574	 Data: torch.Size([10, 384])	 Training Loss: 0.7792362570762634
Step: 575	 Data: torch.Size([10, 384])	 Training Loss: 0.968213677406311
Step: 576	 Data: torch.Size([10, 384])	 Training Loss: 0.8005154728889465
Step: 577	 Data: torch.Size([10, 384])	 Training Loss: 1.1165257692337036
Step: 578	 Data: torch.Size([10, 384])	 Training Loss: 0.8536337018013
Step: 579	 Data: torch.Size([10, 384])	 Training Loss: 0.7350587248802185
Step: 580	 Data: torch.Size([10, 384])	 Training Loss: 1.0804438591003418
Step: 581	 Data: torch.Size([10, 384])	 Training Loss: 0.9883967638015747
Step: 582	 Data: torch.Size([10, 384])	 Training Loss: 0.8664057850837708
Step: 583	 Data: torch.Size([10, 359])	 Training Loss: 1.0281108617782593
Step: 584	 Data: torch.Size([10, 287])	 Training Loss: 1.0182055234909058
Step: 585	 Data: torch.Size([10, 384])	 Training Loss: 0.8420641422271729
Step: 586	 Data: torch.Size([10, 384])	 Training Loss: 0.7823331356048584
Step: 587	 Data: torch.Size([10, 384])	 Training Loss: 0.9451017379760742
Step: 588	 Data: torch.Size([10, 384])	 Training Loss: 0.8637581467628479
Step: 589	 Data: torch.Size([10, 384])	 Training Loss: 0.8837539553642273
Step: 590	 Data: torch.Size([10, 384])	 Training Loss: 0.8591119647026062
Step: 591	 Data: torch.Size([10, 384])	 Training Loss: 0.9533882737159729
Step: 592	 Data: torch.Size([10, 384])	 Training Loss: 0.7963017225265503
Step: 593	 Data: torch.Size([10, 384])	 Training Loss: 0.9703907370567322
Step: 594	 Data: torch.Size([10, 384])	 Training Loss: 0.8549628853797913
Step: 595	 Data: torch.Size([10, 384])	 Training Loss: 1.0458942651748657
Step: 596	 Data: torch.Size([10, 384])	 Training Loss: 0.8823933601379395
Step: 597	 Data: torch.Size([10, 384])	 Training Loss: 0.847817599773407
Step: 598	 Data: torch.Size([10, 384])	 Training Loss: 0.870258092880249
Step: 599	 Data: torch.Size([10, 384])	 Training Loss: 0.9080933928489685
Step: 600	 Data: torch.Size([10, 384])	 Training Loss: 0.9579046368598938
